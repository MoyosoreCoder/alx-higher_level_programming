
===================================
How to use 0-add_integer.py to test
===================================

This modules talked about the addition of two integers or two floating numbers
using the function ``0-add_integer.py``

Content
=======

``0-add_integer.py(...)`` returns addition of its two arguments using ``+`` for the operation

::	

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3

::

>>> add_integer(100, -2)
98

::

>>> add_integer(2)
100

::

>>> add_integer(100.3, -2)
98

::

>>> add_integer(2.0, 3.0)
5

Not a numbers
==============


``add_integer(...)`` expects that both arguments are either integers or floats.
If the argument is a non-integer and non-float, a TypeError is raised

::

>>> add_integer("hello", "there")
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

::

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
